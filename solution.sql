DESCRIBE GoDigital.employee_data;
DESCRIBE GoDigital.insurance_data;
DESCRIBE vendor_data;


/*
Q.1.
*/
# Need to alter column name of vendor table

CREATE VIEW GoDigital.overall_data AS 
(SELECT 
	e.AGENT_ID, e.AGENT_NAME, e.DATE_OF_JOINING AGENT_DATE_OF_JOINING, e.ADDRESS_LINE1 AGENT_ADDRESS_LINE1, e.ADDRESS_LINE2 AGENT_ADDRESS_LINE2, 
    e.CITY AGENT_CITY, e.STATE AGENT_STATE, e.POSTAL_CODE AGENT_POSTAL_CODE, e.EMP_ROUTING_NUMBER AGENT_ROUTING_NUMBER, e.EMP_ACCT_NUMBER AGENT_ACCT_NUMBER,
    i.TXN_DATE_TIME, i.TRANSACTION_ID, i.CUSTOMER_ID, i.POLICY_NUMBER, i.LOSS_DT, i.REPORT_DT, i.INSURANCE_TYPE, i.PREMIUM_AMOUNT, i.CLAIM_AMOUNT, 
    i.CUSTOMER_NAME, i.ADDRESS_LINE1 CUSTOMER_ADDRESS_LINE1, i.ADDRESS_LINE2 CUSTOMER_ADDRESS_LINE2, i.CITY CUSTOMER_CITY, i.STATE CUSTOMER_STATE, 
    i.POSTAL_CODE CUSTOMER_POSTAL_CODE, i.SSN CUSTOMER_SSN, i.MARITAL_STATUS CUSTOMER_MARITAL_STATUS, i.AGE CUSTOMER_AGE, i.TENURE CUSTOMER_TENURE, 
    i.EMPLOYMENT_STATUS CUSTOMER_EMPLOYEMENT_STATUS, i.NO_OF_FAMILY_MEMBERS CUSTOMER_NO_OF_FAMILY_MEMBERS, i.RISK_SEGMENTATION CUSTOMER_RISK_SEGMENTATION, 
    i.HOUSE_TYPE CUSTOMER_HOUSE_TYPE, i.SOCIAL_CLASS CUSTOMER_SOCIAL_CLASS, i.ROUTING_NUMBER CUSTOMER_ROUTING_NUMBER, i.ACCT_NUMBER CUSTOMER_ACCT_NUMBER,
    i.CUSTOMER_EDUCATION_LEVEL, i.CLAIM_STATUS CUSTOMER_CLAIM_STATUS, i.INCIDENT_SEVERITY CUSTOMER_INCIDENT_SEVERITY, i.AUTHORITY_CONTACTED, i.ANY_INJURY, 
    i.POLICE_REPORT_AVAILABLE, i.INCIDENT_STATE, i.INCIDENT_CITY, i.INCIDENT_HOUR_OF_THE_DAY, v.VENDOR_ID, v.VENDOR_NAME, 
    v.ADDRESS_LINE1 VENDOR_ADDRESS_LINE1, v.ADDRESS_LINE2 VENDOR_ADDRESS_LINE2, v.CITY VENDOR_CITY, v.STATE VENDOR_STATE, v.POSTAL_CODE VENDOR_POSTAL_CODE
FROM employee_data e
LEFT OUTER JOIN insurance_data i 
ON e.AGENT_ID = i.AGENT_ID
LEFT OUTER JOIN vendor_data v
ON i.VENDOR_ID = v.VENDOR_ID);

SELECT * FROM GoDigital.overall_data;


-- Q.2: Top 3 insurances with most insurance claims
SELECT INSURANCE_TYPE, COUNT(INSURANCE_TYPE) num_claims
FROM GoDigital.insurance_data
GROUP BY 1
ORDER BY 2 DESC
LIMIT 3;

-- Q.3: 
SELECT CUSTOMER_STATE, COUNT(CUSTOMER_STATE) num_claims
FROM GoDigital.overall_data
WHERE CUSTOMER_RISK_SEGMENTATION = "H"
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

SELECT DISTINCT CUSTOMER_RISK_SEGMENTATION FROM GoDigital.overall_data;

# Q.4: 
WITH location_type AS
(SELECT AGENT_ID, CUSTOMER_ID,
	CASE WHEN CUSTOMER_STATE = INCIDENT_STATE AND CUSTOMER_STATE = AGENT_STATE THEN 1
    ELSE 0 END COLOCATION 
FROM GoDigital.overall_data)
SELECT AVG(COLOCATION)
FROM location_type;


-- Q.5. 
/*
-- CHECK VALUES
SELECT AUTHORITY_CONTACTED, POLICE_REPORT_AVAILABLE
FROM GoDigital.overall_data
WHERE AUTHORITY_CONTACTED != 'Police' AND POLICE_REPORT_AVAILABLE = 1;
*/
-- first disable 'safe update' from preference then restart and run the below code
UPDATE
	GoDigital.insurance_data
SET	
	AUTHORITY_CONTACTED =
		CASE 
			WHEN (UPPER(AUTHORITY_CONTACTED) <> "POLICE") AND (POLICE_REPORT_AVAILABLE = 1) THEN "Police"
		END;
	

-- Q.6. 

-- Q.7.
SELECT T1.AGENT_ID, T2.AGENT_NAME, T1.num_claim_types, T1.total_claim_amount
FROM (
SELECT AGENT_ID, COUNT(DISTINCT INSURANCE_TYPE) num_claim_types, SUM(CLAIM_AMOUNT) total_claim_amount
FROM GoDigital.overall_data
GROUP BY AGENT_ID
HAVING num_claim_types > 2
) T1
JOIN GoDigital.employee_data T2
USING (AGENT_ID)
ORDER BY 4 DESC;


-- Q.8.
WITH Premium_Amount_Change AS (
SELECT PREMIUM_AMOUNT, 
	CASE
		WHEN INSURANCE_TYPE = "Mobile" OR INSURANCE_TYPE = "Travel" THEN PREMIUM_AMOUNT - PREMIUM_AMOUNT * 0.1
        WHEN INSURANCE_TYPE = "Health" OR INSURANCE_TYPE = "Property" THEN PREMIUM_AMOUNT + PREMIUM_AMOUNT * 0.07
        ELSE PREMIUM_AMOUNT + PREMIUM_AMOUNT *0.02
	END NEW_PREMIUM_AMOUNT
FROM 
	GoDigital.overall_data)
SELECT ROUND(SUM(NEW_PREMIUM_AMOUNT) / SUM(PREMIUM_AMOUNT) * 100,2) change_in_premium_amount
FROM Premium_Amount_Change;


-- Q.9. 
WITH discounted_customers AS (
SELECT 
	CUSTOMER_ID, 
    CUSTOMER_NAME,
	CASE
		WHEN CUSTOMER_TENURE > 60 AND CUSTOMER_EMPLOYEMENT_STATUS="N" AND CUSTOMER_NO_OF_FAMILY_MEMBERS >= 4 THEN 1
        ELSE 0
	END ELIGIBLE_FOR_DISCOUNT
FROM GoDigital.overall_data)
SELECT AVG(ELIGIBLE_FOR_DISCOUNT)
FROM discounted_customers;


-- Q.10:



-- Q.11:
SELECT * 
FROM (SELECT AGENT_ID, SUM(CLAIM_AMOUNT) total_claim_amount
FROM GoDigital.overall_data
GROUP BY 1
ORDER BY 2 DESC) T
WHERE RAND() < 0.05;

-- Q.12:
WITH suspicious_agents AS (
SELECT AGENT_ID, 
	SUM(CLAIM_AMOUNT) total_claim_amount,
    CASE
		WHEN SUM(CLAIM_AMOUNT) >= 15000 THEN 1
        ELSE 0
	END SUSPICIOUS
FROM
	GoDigital.overall_data
WHERE
	CUSTOMER_CLAIM_STATUS = "A" 
    AND CUSTOMER_RISK_SEGMENTATION = "H"
    AND CUSTOMER_INCIDENT_SEVERITY = "Major Loss"
GROUP BY 1
)
SELECT ROUND(AVG(SUSPICIOUS)*100,2) "% suspicious agents"
FROM suspicious_agents;

